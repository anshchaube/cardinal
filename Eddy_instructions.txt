Instructions to build cardinal on the "Eddy" cluster

Step 1 – Set environment:

$source .set_env_cardinal

or if building with an SAM outside of Cardinal:

$source set_env_aaroncardinalOutsideSAM

Step 2 – download cardinal from github:

$ git clone https://github.com/neams-th-coe/cardinal.git
$ cd cardinal

Step 3 – Fetch the minimum submodules to build cardinal:

$ git submodule update --init contrib/nekRS
$ git submodule update --init contrib/moose
$ git submodule update --init --recursive contrib/openmc

Step 4 – Edit the update_and_rebuild_petsc.sh file:

$ cd contrib/moose/scripts/
$ vi update_and_rebuild_petsc.sh

Include this right after line 104:
--with-cmake-exec=/usr/bin/cmake3  \

Step 5 – Once the modification from Step 4 is done, built the PETSc numeric library:

$ ./update_and_rebuild_petsc.sh

Step 6 – Build the libMesh finite element library:

$ ./update_and_rebuild_libmesh.sh

Step 7 – Edit the nekrs.mk and the openmc.mk files:

$ cd ../../../config
$ vi nekrs.mk

In line 23 change replace cmake to cmake3

$ vi openmc.mk

In line 5 change replace cmake to cmake3

Step 8 – Finally, build the application from the top-level directory:

$ cd ../
$ make -j4 2>&1 | tee make.log

For submitting jobs, follow the PBSjob script, which contains PBS instructions as well as loads modules, sets env variables, and the appropriate path to allow for cmake3 to work on Eddy's compute nodes.
- the path's bin includes a symbolic link to cmake3, which is needed by nekRS


Running a loop case with Cardinal (9/13/2021)
- requires SAM to be the subApp and Cardinal be the MainApp, in order to limit SAM to 1 processor. The easiest way to do this is to make Cardinal without SAM, then given the SAM MultiApp the location of the SAM lib.
- First, edit "set_env_aaroncardinalNoSAM" custom to your directory/locations of SAM you'll make
- Second, run the editted "set_env_aaroncardinalNoSAM" script, and make SAM alone (with its version of MOOSE)
- Third, make Cardinal (with only nekrs and openmc in the contrib directory). "set_env_aaroncardinalNoSAM" sets Cardinal to use SAM's MOOSE, so it'll be compatible with SAM's lib.
- Fourth, to run a coupled loop case, in the SAM MultiApp line of your Cardinal input file, add the library_path to the SAM you made in the second step. You can follow the example loop test case in "/home/cluster1/ahuxford/cardinal_NekSamInputFiles/problems/steady/pumpClosedLoop/OverDomain/case2_bdf1/coupled/nek/master.i"

